version: "3.9"
services:
  postgres-cicd: #Database service
    image: postgres
    restart: always #Always restart the container if it stops.
    container_name: postgres-cicd
    volumes: #Mount directory for SQL scrits bootstra
      - "./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    healthcheck: #checks if db is operating normally, i.e. accepting connections
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
  rabbit-cicd: #Message Broker service
    image: rabbitmq:3-management
    restart: always
    container_name: rabbit-cicd
    ports: #Only expose the necessary ports. THis sone is needed to access the administration console
      - "127.0.0.1:15672:15672"
  notification-cicd: #notifications service
    image: registry.solvit.pt/formacao-solvit5/notifications
    restart: always
    container_name: notification-cicd
    depends_on: #Express dependency between services. notification-cicd will only starts when these are "ready"
      postgres-cicd:
        condition: service_healthy
      rabbit-cicd:
        condition: service_started
    environment:
      DATABASE_URL: jdbc:postgresql://postgres-cicd:5432/notification
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      RMQ_QUEUE: ${RMQ_QUEUE}
      RMQ_HOST: rabbit-cicd
      RMQ_USER: guest
      RMQ_PASS: guest
      RMQ_PORT: 5672
  authuser-cicd: #user autentication service
    image: registry.solvit.pt/formacao-solvit5/authuser
    restart: always
    container_name: authuser-cicd
    ports:
      - 127.0.0.1:8081:8080
    depends_on:
      postgres-cicd:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://postgres-cicd:5432/users
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/swagger-ui/index.html"]
  todolist_cicd: #todo service
    image: registry.solvit.pt/formacao-solvit5/todolist
    depends_on:
      postgres-cicd:
        condition: service_healthy
      rabbit-cicd:
        condition: service_started
      authuser-cicd:
        condition: service_healthy
    restart: always
    container_name: todolist_cicd
    ports:
      - 127.0.0.1:8082:8080
    environment:
      DATABASE_URL: jdbc:postgresql://postgres-cicd:5432/todolist
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      RMQ_QUEUE: ${RMQ_QUEUE}
      RMQ_HOST: rabbit-cicd
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}
      RMQ_PORT: ${RMQ_PORT}
      AUTH_SERVICE_URL: http://authuser-cicd:8080/