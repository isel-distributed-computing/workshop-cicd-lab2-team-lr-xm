name: Java CI with Maven - Step 12
on:
 workflow_dispatch:
 push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-services:
    env: 
       JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-22.04]
       
    runs-on: [self-hosted, 'Windows', 'X64'] 
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17

      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.jdk }}
        distribution: 'temurin'
        cache: maven
 
    - name: Build Auth Service with Maven
      run: |
        cd authusers
        mvn -B package
      
    - name: Build ToDoList Service with Maven
      run: |
        cd todolist
        mvn -B package
        
    - name: Build Notifications Service with Maven
      run: |
        cd notifications
        mvn -B package



  publish-docker-image-auth:
   env:
    JWT_SECRET:  ${{ secrets.JWT_SECRET }}
    
   runs-on: [self-hosted, 'Windows', 'X64'] 
 
   needs: 
      build-services
           
   steps:
   - name: Log in to the Container registry
     uses: docker/login-action@v2
     with:
      registry: ${{ env.REGISTRY }}
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}

   - uses: actions/checkout@v3

   - name: Set up JDK 17

     uses: actions/setup-java@v3
     with:
       java-version: 17
       distribution: 'temurin'
       cache: maven

   - name: Build Auth Service with Maven
     run: |
       cd authusers
       mvn -B package -Dmaven.test.skip=true
 
   - name: Extract metadata (tags, labels) for Docker

     id: meta-auth
     uses: docker/metadata-action@v4
     with:
       images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}/authusers

   - name: Build and push Docker image
     uses: docker/build-push-action@v4
     with:
       context: authusers/.
       file: authusers/Dockerfile
       push: true
       tags: ${{ steps.meta-auth.outputs.tags }}
       labels: ${{ steps.meta-auth.outputs.labels }}
        
  publish-docker-image-todo_list:
     env:
      JWT_SECRET:  ${{ secrets.JWT_SECRET }}

     runs-on: [self-hosted, 'Windows', 'X64'] 

     needs: 
        build-services

     steps:
     - name: Log in to the Container registry
       uses: docker/login-action@v2
       with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

     - uses: actions/checkout@v3

     - name: Set up JDK 17

       uses: actions/setup-java@v3
       with:
         java-version: 17
         distribution: 'temurin'
         cache: maven

     - name: Build ToDoList Service with Maven
       run: |
         cd todolist
         mvn -B package -Dmaven.test.skip=true

     - name: Extract metadata (tags, labels) for Docker

       id: meta-auth
       uses: docker/metadata-action@v4
       with:
         images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}/todolist

     - name: Build and push Docker image
       uses: docker/build-push-action@v4
       with:
         context: todolist/.
         file: todolist/Dockerfile
         push: true
         tags: ${{ steps.meta-auth.outputs.tags }}
         labels: ${{ steps.meta-auth.outputs.labels }}
         
  publish-docker-image-notifications:
     env:
      JWT_SECRET:  ${{ secrets.JWT_SECRET }}

     runs-on: [self-hosted, 'Windows', 'X64'] 

     needs: 
        build-services

     steps:
     - name: Log in to the Container registry
       uses: docker/login-action@v2
       with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

     - uses: actions/checkout@v3

     - name: Set up JDK 17

       uses: actions/setup-java@v3
       with:
         java-version: 17
         distribution: 'temurin'
         cache: maven

     - name: Build Notifications Service with Maven
       run: |
         cd notifications
         mvn -B package -Dmaven.test.skip=true

     - name: Extract metadata (tags, labels) for Docker

       id: meta-auth
       uses: docker/metadata-action@v4
       with:
         images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}/notifications

     - name: Build and push Docker image
       uses: docker/build-push-action@v4
       with:
         context: notifications/.
         file: notifications/Dockerfile
         push: true
         tags: ${{ steps.meta-auth.outputs.tags }}
         labels: ${{ steps.meta-auth.outputs.labels }}

  build-scan-authuser:
    name: Build and scan Authuser service
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu' 
        java-version: '17'
        cache: maven

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
       languages: 'java'
    # Build Java package
    - name: build auth phase-3
      run: |
        cd phase-3/authusers
        mvn -B package -Dmaven.test.skip=true
    # Perform analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    # Upload artifacts for next job
    - uses: actions/upload-artifact@v3
      with:
        name: authuser-jar
        path: phase-3/authusers/target/authuser-phase2-1.0.0.jar
        if-no-files-found: error


  publish-docker-auth:
      needs: build-scan-authuser
      runs-on: self-hosted
      steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v3
          with:
            name: authuser-jar
        - name: Copy JAR to target (to match Dockerfile)
          run: |
            mkdir phase-3/authusers/target
            cp authuser-phase2-1.0.0.jar phase-3/authusers/target/
        - name: Log in to the Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ secrets.HARBOR_USER_NAME }}
            password: ${{ secrets.HARBOR_USER_PWD }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ env.REGISTRY }}/solvit-cicd/authusers

        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: phase-3/authusers/.
            file: phase-3/authusers/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
